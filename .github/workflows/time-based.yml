name: time-based

on:
  workflow_dispatch:
  schedule:
    - cron: '*/6 * * * *'

jobs:
  check_last_build:
    if: github.event.schedule != ''
    runs-on: ubuntu-latest
    outputs:
      perform_build: ${{ steps.check_if_built.outputs.perform_build }}
    steps:
      - run: |
          echo "GITHUB_REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}" >> "$GITHUB_ENV"
      - name: GitHub API Request
        uses: octokit/request-action@v2.1.0
        id: get_last_scheduled_run
        with:
          route: GET /repos/{owner}/{repo}/actions/runs
          owner: ${{ github.repository_owner }}
          repo: ${{ env.GITHUB_REPOSITORY_NAME }}
          event: schedule
          status: success
          head_sha: ${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: check_if_built
        run: |
          if [ ${{ fromJson(steps.get_last_scheduled_run.outputs.data).total_count }} -gt 0 ]; then
            echo already built, will cancel
            echo '::set-output name=perform_build::false'
          else
            echo '::set-output name=perform_build::true'
          fi
      - name: GitHub API Request
        if: steps.check_if_built.outputs.perform_build == 'false'
        uses: octokit/request-action@v2.1.0
        with:
          route: POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel
          owner: ${{ github.repository_owner }}
          repo: ${{ env.GITHUB_REPOSITORY_NAME }}
          run_id: ${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: check_last_build
    if: always() && needs.check_last_build.perform_build == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Run a one-line script
        run: echo Hello, world!
